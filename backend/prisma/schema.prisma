generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid())
  email     String  @unique
  firstName String  @db.VarChar(255)
  lastName  String  @db.VarChar(255)
  color     String?
  password  String

  activities       Activity[]
  moods            Mood[]
  userEnergyLevels UserEnergyLevel[]
}

enum LEVELS {
  HIGH_ENERGY_UNPLEASANT
  HIGH_ENERGY_PLEASANT
  LOW_ENERGY_UNPLEASANT
  LOW_ENERGY_PLEASANT
}

model EnergyLevel {
  level LEVELS @id @unique
  color String @unique

  highEnergyUnpleasant HighEnergyUnpleasant[]
  highEnergyPleasant   HighEnergyPleasant[]
  lowEnergyUnpleasant  LowEnergyUnpleasant[]
  lowEnergyPleasant    LowEnergyPleasant[]

  userEnergyLevel UserEnergyLevel[]
  mood            Mood[]
  activity        Activity[]
}

model UserEnergyLevel {
  id    String @id @default(uuid())
  color String @unique

  userId               String
  belongsToUser        User        @relation(fields: [userId], references: [id])
  energyLevel          LEVELS
  belongsToEnergyLevel EnergyLevel @relation(fields: [energyLevel], references: [level])
}

model Mood {
  id              String   @id @default(uuid())
  feeling         String
  description     String
  createdDatetime DateTime @default(now()) @db.Timestamptz
  updatedDatetime DateTime @updatedAt @db.Timestamptz

  userId               String
  belongsToUser        User        @relation(fields: [userId], references: [id])
  energyLevel          LEVELS
  belongsToEnergyLevel EnergyLevel @relation(fields: [energyLevel], references: [level])
}

model Activity {
  id              String   @id @default(uuid())
  feeling         String
  name            String
  description     String
  createdDatetime DateTime @default(now()) @db.Timestamptz
  updatedDatetime DateTime @updatedAt @db.Timestamptz

  userId               String
  belongsToUser        User        @relation(fields: [userId], references: [id])
  energyLevel          LEVELS
  belongsToEnergyLevel EnergyLevel @relation(fields: [energyLevel], references: [level])
}

enum High_Energy_Unpleasant_Feelings {
  ENRAGED
  PANICKED
  STRESSED
  JITTERY
  SHOCKED
  LIVID
  FURIOUS
  FRUSTRATED
  TENSE
  STUNNED
  FUMING
  FRIGHTENED
  ANGRY
  NERVOUS
  RESTLESS
  ANXIOUS
  APPREHENSIVE
  WORRIED
  IRRITATED
  ANNOYED
  REPULSED
  TROUBLED
  CONCERNED
  UNEASY
  PEEVED
}

model HighEnergyUnpleasant {
  feelings High_Energy_Unpleasant_Feelings @id @unique

  levelType      LEVELS
  belongsToLevel EnergyLevel @relation(fields: [levelType], references: [level])
}

enum High_Energy_Pleasant_Feelings {
  SURPRISED
  UPBEAT
  FESTIVE
  EXHILARATED
  ECSTATIC
  HYPER
  CHEERFUL
  MOTIVATED
  INSPIRED
  ELATED
  ENERGIZED
  LIVELY
  EXCITED
  OPTIMISTIC
  ENTHUSIASTIC
  PLEASED
  FOCUSED
  HAPPY
  PROUD
  THRILLED
  PLEASANT
  JOYFUL
  HOPEFUL
  PLAYFUL
  BLISSFUL
}

model HighEnergyPleasant {
  feelings High_Energy_Pleasant_Feelings @id @unique

  levelType      LEVELS
  belongsToLevel EnergyLevel @relation(fields: [levelType], references: [level])
}

enum Low_Energy_Unpleasant_Feelings {
  DISGUSTED
  GLUM
  DISAPPOINTED
  DOWN
  APATHETIC
  PESSIMISTIC
  MOROSE
  DISCOURAGED
  SAD
  BORED
  ALIENATED
  MISERABLE
  LONELY
  DISHEARTENED
  TIRED
  DESPONDENT
  DEPRESSED
  SULLEN
  EXHAUSTED
  FATIGUED
  DESPAIRING
  HOPELESS
  DESOLATE
  SPENT
  DRAINED
}

model LowEnergyUnpleasant {
  feelings Low_Energy_Unpleasant_Feelings @id @unique

  levelType      LEVELS
  belongsToLevel EnergyLevel @relation(fields: [levelType], references: [level])
}

enum Low_Energy_Pleasant_Feelings {
  AT_EASE
  EASYGOING
  CONTENT
  LOVING
  FULFILLED
  CALM
  SECURE
  SATISFIED
  GRATEFUL
  TOUCHED
  RELAXED
  CHILL
  RESTFUL
  BLESSED
  BALANCED
  MELLOW
  THOUGHTFUL
  PEACEFUL
  COMFORTABLE
  CAREFREE
  SLEEPY
  COMPLACENT
  TRANQUIL
  COZY
  SERENE
}

model LowEnergyPleasant {
  feelings Low_Energy_Pleasant_Feelings @id @unique

  levelType      LEVELS
  belongsToLevel EnergyLevel @relation(fields: [levelType], references: [level])
}
